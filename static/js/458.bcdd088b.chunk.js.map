{"version":3,"file":"static/js/458.bcdd088b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoaderContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoaderContainer } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <StyledLoaderContainer>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoaderContainer>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nexport function SearchBar({ onSearch }) {\n  const [query, setQuery] = useState('');\n\n  const handleQuerySearch = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSearch(query);\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" name=\"query\" onChange={handleQuerySearch} />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { getQueryMovies } from 'utils/API';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [moviesDontFind, setMoviesDontFind] = useState(false);\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setMoviesDontFind(false);\n        const response = await getQueryMovies(query);\n        if (!response.results.length) {\n          setMoviesDontFind(true);\n        }\n\n        setMovies(response.results);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [query]);\n\n  const onSearch = newQuery => {\n    if (newQuery === '') return;\n\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <section>\n      <SearchBar onSearch={onSearch} />\n      {loading && <Loader />}\n      {error && <h2>Oops, something went wrong... </h2>}\n      {movies.length > 0 && <MovieList movies={movies} />}\n      {moviesDontFind && <h2>no films found for this query - {query}</h2>}\n    </section>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b387244ee5c8a51c0c80e828c65743';\nconst END_POINT = {\n  trending: '/trending/movie/week',\n  searchQuery: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.trending}?api_key=${API_KEY}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const getQueryMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.searchQuery}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${END_POINT.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  const posterPath = data.poster_path;\n  const posterUrl = `https://image.tmdb.org/t/p/w400/${posterPath}`;\n  return { ...data, posterUrl };\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieCast}?api_key=${API_KEY}`\n  );\n  return data.cast.slice(0, 10);\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["StyledLoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieList","movies","location","useLocation","map","id","title","to","state","from","SearchBar","onSearch","useState","query","setQuery","onSubmit","event","preventDefault","currentTarget","reset","type","name","onChange","e","target","value","trim","toLowerCase","MoviesPage","setMovies","useSearchParams","searchParams","setSearchParams","get","loading","setLoading","error","setError","moviesDontFind","setMoviesDontFind","useEffect","getMovies","getQueryMovies","response","results","length","console","log","newQuery","axios","API_KEY","END_POINT","getTrendingMovies","page","data","getMovieDetails","posterPath","poster_path","posterUrl","getMovieCast","cast","slice","getMovieReviews"],"sourceRoot":""}