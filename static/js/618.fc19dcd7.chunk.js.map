{"version":3,"file":"static/js/618.fc19dcd7.chunk.js","mappings":"gMAEaA,E,QAAwBC,EAAAA,IAAH,+G,SCC3B,SAASC,IACd,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACEG,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,iBAAiB,GACjBC,SAAS,KAIhB,C,8ECfM,SAASC,EAAT,GAA0C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAClC,OACE,wBACGD,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAA1C,SACGG,KAFID,EADC,KASjB,C,gKCXM,SAASK,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAA0BC,EAAAA,EAAAA,UAAQ,OAACF,QAAD,IAACA,EAAAA,EAAe,IAAlD,eAAOG,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACHL,GAGLJ,EAASI,EACV,GAAE,CAACJ,EAAUI,IAad,OACE,kBAAMM,SARa,SAAAC,GACnBA,EAAMC,iBAENT,EAAgB,CAAEI,MAAAA,IAClBI,EAAME,cAAcC,OACrB,EAGC,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,SAdZ,SAAAC,GACxBV,EAASU,EAAEC,OAAOC,MAAMC,OAAOC,cAChC,OAcG,mBAAQP,KAAK,SAAb,sBAGL,C,uBC5Bc,SAASQ,IACtB,OAA4BjB,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAeiC,EAAf,KACA,GAA0BlB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOmB,EAAP,KAAgBC,EAAhB,KACA,GAA0BpB,EAAAA,EAAAA,WAAS,GAAnC,eAAOqB,EAAP,KAAcC,EAAd,KACA,GAA4CtB,EAAAA,EAAAA,WAAS,GAArD,eAAOuB,EAAP,KAAuBC,EAAvB,KAEMtC,GAAWuC,EAAAA,EAAAA,OAEjBtB,EAAAA,EAAAA,YAAU,WACR,GAAc,KAAVF,EAAJ,CAGA,IAAMyB,EAAS,mCAAG,oGAEdN,GAAW,GACXI,GAAkB,GAHJ,UAISG,EAAAA,EAAAA,IAAe1B,GAJxB,QAIR2B,EAJQ,QAKAC,QAAQC,QACpBN,GAAkB,GAGpBN,EAAUU,EAASC,SATL,kDAWdP,EAAS,EAAD,IACRS,QAAQC,IAAR,MAZc,yBAcdZ,GAAW,GAdG,6EAAH,qDAiBfM,GAlBC,CAmBF,GAAE,CAACzB,IAMJ,OACE,gCACE,SAACR,EAAD,CAAWC,SANE,SAAAO,GACfC,EAASD,EACV,IAKIkB,IAAW,SAAC5C,EAAA,EAAD,IACX8C,IAAS,2DACTpC,EAAO6C,OAAS,IAAK,SAAC9C,EAAA,EAAD,CAAWE,SAAUA,EAAUD,OAAQA,IAC5DsC,IAAkB,6DAAqCtB,OAG7D,C,4MCnDDgC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCACVC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIO,WAJPA,EAKU,WAGHC,EAAiB,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SACRJ,EAAAA,EAAAA,IAAA,UAClBE,EADkB,oBACYD,EADZ,iBAC4BG,IAFpB,uBACvBC,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qDAQjBX,EAAc,mCAAG,WAAO1B,GAAP,8FAAcoC,EAAd,+BAAqB,EAArB,SACLJ,EAAAA,EAAAA,IAAA,UAClBE,EADkB,oBACeD,EADf,iBAC+BG,EAD/B,kBAC6CpC,IAFxC,uBACpBqC,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQdC,EAAe,mCAAG,WAAMnD,GAAN,6FACN6C,EAAAA,EAAAA,IAAA,UAClBE,EADkB,YACQ/C,EADR,oBACsB8C,IAFhB,uBACrBI,EADqB,EACrBA,KAIFE,EAAaF,EAAKG,YAClBC,EANuB,0CAMwBF,GANxB,qCAOjBF,GAPiB,IAOXI,UAAAA,KAPW,2CAAH,sDAUfC,EAAY,mCAAG,WAAMvD,GAAN,yFACH6C,EAAAA,EAAAA,IAAA,iBACX7C,GADW,OACN+C,EADM,oBACyBD,IAFtB,uBAClBI,EADkB,EAClBA,KADkB,kBAKnBA,EAAKM,KAAKC,MAAM,EAAG,KALA,2CAAH,sDAQZC,EAAe,mCAAG,WAAM1D,GAAN,yFACN6C,EAAAA,EAAAA,IAAA,iBACX7C,GADW,OACN+C,EADM,oBAC4BD,IAFtB,uBACrBI,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","components/MoviesPage/MoviesPage.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoaderContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoaderContainer } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <StyledLoaderContainer>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoaderContainer>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport function MovieList({ movies, location }) {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n    search: PropTypes.string.isRequired,\n    hash: PropTypes.string.isRequired,\n    state: PropTypes.object,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function SearchBar({ onSearch }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [query, setQuery] = useState(searchQuery ?? '');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    onSearch(searchQuery);\n  }, [onSearch, searchQuery]);\n\n  const handleQuerySearch = e => {\n    setQuery(e.target.value.trim().toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ query });\n    event.currentTarget.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" name=\"query\" onChange={handleQuerySearch} />\n      </label>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getQueryMovies } from 'utils/API';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [moviesDontFind, setMoviesDontFind] = useState(false);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        setMoviesDontFind(false);\n        const response = await getQueryMovies(query);\n        if (!response.results.length) {\n          setMoviesDontFind(true);\n        }\n\n        setMovies(response.results);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [query]);\n\n  const onSearch = query => {\n    setQuery(query);\n  };\n\n  return (\n    <section>\n      <SearchBar onSearch={onSearch} />\n      {loading && <Loader />}\n      {error && <h2>Oops, something went wrong... </h2>}\n      {movies.length > 0 && <MovieList location={location} movies={movies} />}\n      {moviesDontFind && <h2>no films found for this query - {query}</h2>}\n    </section>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b387244ee5c8a51c0c80e828c65743';\nconst END_POINT = {\n  trending: '/trending/movie/week',\n  searchQuery: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.trending}?api_key=${API_KEY}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const getQueryMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.searchQuery}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${END_POINT.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  const posterPath = data.poster_path;\n  const posterUrl = `https://image.tmdb.org/t/p/w400/${posterPath}`;\n  return { ...data, posterUrl };\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieCast}?api_key=${API_KEY}`\n  );\n\n  return data.cast.slice(0, 10);\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["StyledLoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","MovieList","movies","location","map","id","title","to","state","from","SearchBar","onSearch","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","query","setQuery","useEffect","onSubmit","event","preventDefault","currentTarget","reset","type","name","onChange","e","target","value","trim","toLowerCase","MoviesPage","setMovies","loading","setLoading","error","setError","moviesDontFind","setMoviesDontFind","useLocation","getMovies","getQueryMovies","response","results","length","console","log","axios","API_KEY","END_POINT","getTrendingMovies","page","data","getMovieDetails","posterPath","poster_path","posterUrl","getMovieCast","cast","slice","getMovieReviews"],"sourceRoot":""}