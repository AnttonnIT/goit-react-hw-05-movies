{"version":3,"file":"static/js/325.cd74482e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","utils/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledLoaderContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { StyledLoaderContainer } from './Loader.styled';\n\nexport function Loader() {\n  return (\n    <StyledLoaderContainer>\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#4fa94d\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </StyledLoaderContainer>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding-top: 10px;\n  padding-left: 10px;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { StyledLink } from './BackLink.styled';\n\nexport const BackLink = ({ to }) => {\n  return (\n    <StyledLink to={to}>\n      <AiOutlineArrowLeft />\n      Go back\n    </StyledLink>\n  );\n};\n\nBackLink.propTypes = {\n  to: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n      search: PropTypes.string.isRequired,\n      hash: PropTypes.string.isRequired,\n      state: PropTypes.object,\n    }).isRequired,\n  ]).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 10px;\n`;\nexport const AdditionalInformationContainer = styled.div`\n  padding: 10px;\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n`;\n\nexport const MovieDetailsContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n","import PropTypes from 'prop-types';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  AdditionalInformationContainer,\n  MovieDetailsContainer,\n  MovieDetailsContent,\n} from './MovieDetails.styled';\n\nexport function MovieDetails({ movie }) {\n  const location = useLocation();\n  const { title, vote_average, overview, posterUrl, genres, release_date } =\n    movie;\n  return (\n    <>\n      <MovieDetailsContainer>\n        <div>\n          <img src={posterUrl} alt={title} width={'400px'} height={'500px'} />\n        </div>\n        <MovieDetailsContent>\n          <h1>\n            {title} ({release_date.slice(0, 4)})\n          </h1>\n\n          <p>\n            <b> User score:</b> {vote_average}\n          </p>\n          <p>{overview}</p>\n          <p>\n            <b>Genres:</b> {genres.map(genre => genre.name).join(', ')}\n          </p>\n        </MovieDetailsContent>\n      </MovieDetailsContainer>\n      <AdditionalInformationContainer>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={location.state}>\n              cast\n            </Link>\n          </li>\n\n          <li>\n            <Link to=\"reviews\" state={location.state}>\n              reviews\n            </Link>\n          </li>\n        </ul>\n      </AdditionalInformationContainer>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    posterUrl: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ).isRequired,\n    release_date: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'utils/API';\nimport { Loader } from 'components/Loader/Loader';\nimport { BackLink } from 'components/BackLink/BackLink';\nimport { MovieDetails } from 'components/MovieDetails/MovieDetails';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        setLoading(true);\n        const response = await getMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        setError(error);\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <section>\n        {loading && <Loader />}\n        {error && <h2>Oops, something went wrong... </h2>}\n        <BackLink to={backLinkHref} />\n        {movie.id && <MovieDetails movie={movie} />}\n      </section>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '30b387244ee5c8a51c0c80e828c65743';\nconst END_POINT = {\n  trending: '/trending/movie/week',\n  searchQuery: '/search/movie',\n  movieDetails: '/movie',\n  movieCast: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport const getTrendingMovies = async (page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.trending}?api_key=${API_KEY}&page=${page}`\n  );\n\n  return data;\n};\n\nexport const getQueryMovies = async (query, page = 1) => {\n  const { data } = await axios.get(\n    `${END_POINT.searchQuery}?api_key=${API_KEY}&page=${page}&query=${query}`\n  );\n\n  return data;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(\n    `${END_POINT.movieDetails}/${id}?api_key=${API_KEY}`\n  );\n\n  const posterPath = data.poster_path;\n  const posterUrl = `https://image.tmdb.org/t/p/w400/${posterPath}`;\n  return { ...data, posterUrl };\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieCast}?api_key=${API_KEY}`\n  );\n  return data.cast.slice(0, 10);\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}${END_POINT.movieReviews}?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n"],"names":["StyledLoaderContainer","styled","Loader","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","StyledLink","Link","BackLink","to","MovieDetailsContainer","AdditionalInformationContainer","MovieDetailsContent","MovieDetails","movie","location","useLocation","title","vote_average","overview","posterUrl","genres","release_date","src","alt","slice","map","genre","name","join","state","Suspense","fallback","MovieDetailsPage","useState","setMovie","loading","setLoading","error","setError","movieId","useParams","backLinkHref","from","useEffect","getMovie","getMovieDetails","response","console","log","id","axios","API_KEY","END_POINT","getTrendingMovies","page","data","getQueryMovies","query","posterPath","poster_path","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}